/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dsgn.m3z.msg.views;

import dsgn.m3z.msg.model.Mail;
import dsgn.m3z.msg.model.User;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.StreamCorruptedException;
import java.net.ConnectException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author M3z
 */
public class ClientApp extends javax.swing.JFrame {

    /**
     * Creates new form ClientApp
     */
    public ClientApp() {
        initComponents();
        setLocationRelativeTo(null);
        logPanel.setVisible(true);
        serverDialog.setVisible(true);
        serverDialog.setLocationRelativeTo(null);
        serverDialog.setFocusable(true);
        
        serverDialog.requestFocus();
        appPanel.setVisible(false);
        this.getRootPane().setDefaultButton(btnLog);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regDialog = new javax.swing.JDialog();
        txtUserReg = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNameReg = new javax.swing.JTextField();
        txtPassReg = new javax.swing.JPasswordField();
        btnCancelNew = new javax.swing.JButton();
        btnCreateNew = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        serverDialog = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnAccepConnect = new javax.swing.JButton();
        btnCanConect = new javax.swing.JButton();
        mailDialog = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMail = new javax.swing.JTextArea();
        txtSenderMail = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtRecepMail = new javax.swing.JTextField();
        txtSubjMail = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnAMail = new javax.swing.JButton();
        btnCancelMail = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        cbEncryptMail = new javax.swing.JCheckBox();
        decryptDialog = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        btnDecrypt = new javax.swing.JButton();
        btnCancelDecryp = new javax.swing.JButton();
        logPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUserLog = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnLog = new javax.swing.JButton();
        txtPassLog = new javax.swing.JPasswordField();
        appPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        model = new DefaultListModel();
        lMails = new javax.swing.JList<>();
        btnNewEm = new javax.swing.JButton();
        btnOpenEm = new javax.swing.JButton();
        btnDeleteEm = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mAccount = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miLogI = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miDelete = new javax.swing.JMenuItem();
        miLogO = new javax.swing.JMenuItem();
        mMail = new javax.swing.JMenu();
        miRefresh = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        miSend = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        miDelMails = new javax.swing.JMenuItem();
        mServer = new javax.swing.JMenu();
        miConfig = new javax.swing.JMenuItem();

        regDialog.setTitle("MENSAJERIA - New Account");
        regDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        regDialog.setModal(true);
        regDialog.setResizable(false);
        regDialog.setSize(new java.awt.Dimension(550, 418));

        txtUserReg.setText("Insert User (Just Letter or Digit)...");
        txtUserReg.setToolTipText("Insert Username to register");
        txtUserReg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserRegFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserRegFocusLost(evt);
            }
        });
        txtUserReg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserRegKeyTyped(evt);
            }
        });

        jLabel4.setText("Pass");

        jLabel5.setText("User");

        jLabel6.setText("Name");

        txtNameReg.setText("Your Name (optional)...");
        txtNameReg.setToolTipText("Your real name to register (optional)");
        txtNameReg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameRegFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameRegFocusLost(evt);
            }
        });

        txtPassReg.setToolTipText("Insert Password to register");

        btnCancelNew.setText("CANCEL");
        btnCancelNew.setToolTipText("Cancel User creation");
        btnCancelNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNewActionPerformed(evt);
            }
        });

        btnCreateNew.setText("CREATE");
        btnCreateNew.setToolTipText("Create User with those datas");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Registration");

        javax.swing.GroupLayout regDialogLayout = new javax.swing.GroupLayout(regDialog.getContentPane());
        regDialog.getContentPane().setLayout(regDialogLayout);
        regDialogLayout.setHorizontalGroup(
            regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regDialogLayout.createSequentialGroup()
                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(regDialogLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(regDialogLayout.createSequentialGroup()
                                .addComponent(btnCancelNew, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                .addComponent(btnCreateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(regDialogLayout.createSequentialGroup()
                                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUserReg, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                                    .addComponent(txtNameReg)
                                    .addComponent(txtPassReg)))))
                    .addGroup(regDialogLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        regDialogLayout.setVerticalGroup(
            regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regDialogLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUserReg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPassReg, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNameReg, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addGroup(regDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelNew, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        serverDialog.setTitle("Connection settings");
        serverDialog.setModal(true);
        serverDialog.setResizable(false);
        serverDialog.setSize(new java.awt.Dimension(566, 341));

        jLabel8.setText("Host IP");
        jLabel8.setToolTipText("");

        jLabel9.setText("Port");

        txtHost.setText("127.0.0.1");
        txtHost.setToolTipText("Insert server Host Address");

        txtPort.setText("3333");
        txtPort.setToolTipText("Insert number of port (3333 by default)");
        txtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPortKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Connection");

        btnAccepConnect.setText("ACCEPT");
        btnAccepConnect.setToolTipText("Connect");
        btnAccepConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccepConnectActionPerformed(evt);
            }
        });

        btnCanConect.setText("CANCEL");
        btnCanConect.setToolTipText("Cancel server connection");
        btnCanConect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanConectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout serverDialogLayout = new javax.swing.GroupLayout(serverDialog.getContentPane());
        serverDialog.getContentPane().setLayout(serverDialogLayout);
        serverDialogLayout.setHorizontalGroup(
            serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverDialogLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(serverDialogLayout.createSequentialGroup()
                        .addComponent(btnCanConect, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAccepConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(serverDialogLayout.createSequentialGroup()
                        .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHost)
                            .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                        .addContainerGap(109, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serverDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        serverDialogLayout.setVerticalGroup(
            serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(serverDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCanConect, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAccepConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        mailDialog.setSize(new java.awt.Dimension(837, 654));
        mailDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                mailDialogWindowClosing(evt);
            }
        });

        taMail.setColumns(20);
        taMail.setRows(5);
        taMail.setToolTipText("E-Mail Text");
        jScrollPane2.setViewportView(taMail);

        txtSenderMail.setToolTipText("Sender User (Required)");
        txtSenderMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSenderMailKeyTyped(evt);
            }
        });

        jLabel12.setText("From:");

        jLabel13.setText("To:");

        txtRecepMail.setToolTipText("Receptor user (Required)");
        txtRecepMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecepMailKeyTyped(evt);
            }
        });

        txtSubjMail.setToolTipText("Subject of the E-Mail (Required)");

        jLabel14.setText("Subj:");

        btnAMail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAMail.setText("a");
        btnAMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAMailActionPerformed(evt);
            }
        });

        btnCancelMail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelMail.setText("Cancel");
        btnCancelMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelMailActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Encrypt?");

        cbEncryptMail.setText("Yes");
        cbEncryptMail.setToolTipText("Click to Encrypt the E-mail Text");

        javax.swing.GroupLayout mailDialogLayout = new javax.swing.GroupLayout(mailDialog.getContentPane());
        mailDialog.getContentPane().setLayout(mailDialogLayout);
        mailDialogLayout.setHorizontalGroup(
            mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mailDialogLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mailDialogLayout.createSequentialGroup()
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSenderMail)
                            .addComponent(txtRecepMail)
                            .addComponent(txtSubjMail, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(mailDialogLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cbEncryptMail)))))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mailDialogLayout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(btnCancelMail, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAMail, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );
        mailDialogLayout.setVerticalGroup(
            mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mailDialogLayout.createSequentialGroup()
                .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mailDialogLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSenderMail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRecepMail)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSubjMail)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(mailDialogLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbEncryptMail)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(mailDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAMail, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(btnCancelMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        decryptDialog.setTitle("Encrypted E-Mail");
        decryptDialog.setEnabled(false);
        decryptDialog.setFocusable(false);
        decryptDialog.setModal(true);
        decryptDialog.setResizable(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Insert decrypter pass...");

        jPasswordField1.setText("jPasswordField1");

        btnDecrypt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDecrypt.setText("Decrypt");

        btnCancelDecryp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelDecryp.setText("Cancel");

        javax.swing.GroupLayout decryptDialogLayout = new javax.swing.GroupLayout(decryptDialog.getContentPane());
        decryptDialog.getContentPane().setLayout(decryptDialogLayout);
        decryptDialogLayout.setHorizontalGroup(
            decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decryptDialogLayout.createSequentialGroup()
                .addGroup(decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(decryptDialogLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(decryptDialogLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnCancelDecryp, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(decryptDialogLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        decryptDialogLayout.setVerticalGroup(
            decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(decryptDialogLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelDecryp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MENSAJERIA - Client");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        logPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bienvenidos a la aplicación Mensajería");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("User");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Password");

        txtUserLog.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUserLog.setText("Insert User to login...");
        txtUserLog.setToolTipText("Insert Username to login");
        txtUserLog.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserLogFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserLogFocusLost(evt);
            }
        });
        txtUserLog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserLogKeyTyped(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNew.setText("NEW ACCOUNT");
        btnNew.setToolTipText("Create New User");
        btnNew.setEnabled(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnLog.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLog.setText("LOGIN");
        btnLog.setToolTipText("Login User");
        btnLog.setEnabled(false);
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });

        txtPassLog.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPassLog.setToolTipText("Insert Password to login");
        txtPassLog.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassLogFocusGained(evt);
            }
        });

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logPanelLayout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                .addComponent(btnLog, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUserLog, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                    .addComponent(txtPassLog))
                                .addGap(35, 35, 35)
                                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUserLog)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(txtPassLog))
                .addGap(49, 49, 49)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLog, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        lMails.setModel(model);
        lMails.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lMails);

        btnNewEm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNewEm.setText("NEW");
        btnNewEm.setToolTipText("New Email");
        btnNewEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmActionPerformed(evt);
            }
        });

        btnOpenEm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnOpenEm.setText("Open");
        btnOpenEm.setToolTipText("Open Selected Email");
        btnOpenEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenEmActionPerformed(evt);
            }
        });

        btnDeleteEm.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        btnDeleteEm.setText("Delete");
        btnDeleteEm.setToolTipText("Not implemented yet");
        btnDeleteEm.setEnabled(false);
        btnDeleteEm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmActionPerformed(evt);
            }
        });

        btnDeleteAll.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        btnDeleteAll.setText("Delete All");
        btnDeleteAll.setToolTipText("Not implemented yet");
        btnDeleteAll.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Bandeja de entrada");

        javax.swing.GroupLayout appPanelLayout = new javax.swing.GroupLayout(appPanel);
        appPanel.setLayout(appPanelLayout);
        appPanelLayout.setHorizontalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addGroup(appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnDeleteEm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNewEm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOpenEm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteAll, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                    .addGroup(appPanelLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        appPanelLayout.setVerticalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(btnNewEm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOpenEm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteEm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        mAccount.setText("Account");

        miNew.setText("Create...");
        miNew.setToolTipText("Create User...");
        miNew.setEnabled(false);
        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        mAccount.add(miNew);

        miLogI.setText("Login");
        miLogI.setToolTipText("Login User");
        miLogI.setEnabled(false);
        miLogI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogIActionPerformed(evt);
            }
        });
        mAccount.add(miLogI);
        mAccount.add(jSeparator1);

        miDelete.setText("Delete...");
        miDelete.setToolTipText("Not implemented yet");
        miDelete.setEnabled(false);
        mAccount.add(miDelete);

        miLogO.setText("Logout");
        miLogO.setToolTipText("LogOut User");
        miLogO.setEnabled(false);
        miLogO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogOActionPerformed(evt);
            }
        });
        mAccount.add(miLogO);

        jMenuBar1.add(mAccount);

        mMail.setText("Mails");
        mMail.setEnabled(false);

        miRefresh.setText("Refresh");
        miRefresh.setToolTipText("Refresh the Emails");
        miRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRefreshActionPerformed(evt);
            }
        });
        mMail.add(miRefresh);
        mMail.add(jSeparator3);

        miSend.setText("Send New...");
        miSend.setToolTipText("Send New Email...");
        miSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSendActionPerformed(evt);
            }
        });
        mMail.add(miSend);
        mMail.add(jSeparator2);

        miDelMails.setText("Delete mails...");
        miDelMails.setToolTipText("Not implemented yet");
        miDelMails.setEnabled(false);
        mMail.add(miDelMails);

        jMenuBar1.add(mMail);

        mServer.setText("Server");

        miConfig.setText("Configurar");
        miConfig.setToolTipText("Server Connection Settings");
        miConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miConfigActionPerformed(evt);
            }
        });
        mServer.add(miConfig);

        jMenuBar1.add(mServer);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(appPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(appPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserLogFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserLogFocusGained
        if(txtUserLog.getText().equals("Insert User to login...")){
            txtUserLog.setText("");
        }
    }//GEN-LAST:event_txtUserLogFocusGained

    private void txtUserLogFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserLogFocusLost
        if(txtUserLog.getText().length() == 0){
            txtUserLog.setText("Insert User to login...");
        }
    }//GEN-LAST:event_txtUserLogFocusLost

    private void txtUserLogKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserLogKeyTyped
        if (!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtUserLogKeyTyped

    private void txtUserRegFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserRegFocusGained
        if(txtUserReg.getText().equals("Insert User (Just Letter or Digit)...")){
            txtUserReg.setText("");
        }
    }//GEN-LAST:event_txtUserRegFocusGained

    private void txtUserRegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserRegFocusLost
        if(txtUserReg.getText().length() == 0){
            txtUserReg.setText("Insert User (Just Letter or Digit)...");
        }
    }//GEN-LAST:event_txtUserRegFocusLost

    private void txtUserRegKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserRegKeyTyped
        if (!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtUserRegKeyTyped

    private void txtNameRegFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameRegFocusGained
        if(txtNameReg.getText().equals("Your Name (optional)...")){
            txtNameReg.setText("");
        }
    }//GEN-LAST:event_txtNameRegFocusGained

    private void txtNameRegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameRegFocusLost
        if(txtNameReg.getText().length() == 0){
            txtNameReg.setText("Your Name (optional)...");
        }
    }//GEN-LAST:event_txtNameRegFocusLost

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        
        log();
    }//GEN-LAST:event_btnLogActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        nou();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnCancelNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNewActionPerformed
        regDialog.setVisible(false);
        txtUserReg.setText("Insert User (Just Letter or Digit)...");
        txtNameReg.setText("Your Name (optional)...");
        txtPassReg.setText(null);
    }//GEN-LAST:event_btnCancelNewActionPerformed

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed
        nou();
    }//GEN-LAST:event_miNewActionPerformed

    private void btnCanConectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanConectActionPerformed
        serverDialog.setVisible(false);
    }//GEN-LAST:event_btnCanConectActionPerformed

    private void btnAccepConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccepConnectActionPerformed
        if(txtHost.getText().length() > 0 && txtPort.getText().length() > 0){
            
            localhost = txtHost.getText();
            port = Integer.parseInt(txtPort.getText());
            
            try{
                clientSocket = new Socket(localhost, port);
                toServer = new DataOutputStream(clientSocket.getOutputStream());
                fromServer = new DataInputStream(clientSocket.getInputStream());
                objToServer = new ObjectOutputStream(clientSocket.getOutputStream());
                objFromServer = new ObjectInputStream(clientSocket.getInputStream());
               
                if (clientSocket != null){
                    btnLog.setEnabled(true);
                    btnNew.setEnabled(true);
                    miLogI.setEnabled(true);
                    miNew.setEnabled(true);
                }
                
                serverDialog.setVisible(false);
            } catch (ConnectException | UnknownHostException e){
                JOptionPane.showMessageDialog(null,"Incorrect host data..."
                                                , "Connection's Error"
                                                , JOptionPane.ERROR_MESSAGE);
                    btnLog.setEnabled(false);
                    btnNew.setEnabled(false);
                    miLogI.setEnabled(false);
                    miNew.setEnabled(false);
                
            }
            catch (IOException e) {
                Logger.getLogger(ClientApp.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_btnAccepConnectActionPerformed

    private void txtPortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortKeyTyped
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtPortKeyTyped

    private void miConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miConfigActionPerformed
        serverDialog.setVisible(true);
    }//GEN-LAST:event_miConfigActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        String nick = null;
        String psw = null;
        String name = null;
        User niu = null;
        
        if(txtUserReg.getText().length() > 0
            && !txtUserReg.getText().equals("Insert User (Just Letter or Digit)...")){
            nick = txtUserReg.getText();
        }
        if(txtPassReg.getPassword().length > 0){
            psw = new String(txtPassReg.getPassword());
        }
        if(txtNameReg.getText().length() > 0
            && !txtNameReg.getText().equals("Your Name (optional)...")){
            name = txtNameReg.getText();
        }
        
        if(nick != null && psw != null && name != null){
            
            niu = new User(nick, psw, name);
            
        }
        else if (nick != null && psw != null ){
            niu = new User(nick, psw);
        }
        
        if(niu != null){
            
            String rsp = null;
            
            try{
//                toServer = new DataOutputStream(clientSocket.getOutputStream());
//                fromServer = new DataInputStream(clientSocket.getInputStream());
//                objToServer = new ObjectOutputStream(clientSocket.getOutputStream());
//                objFromServer = new ObjectInputStream(clientSocket.getInputStream());
                
                toServer.writeUTF("NEW");
                objToServer.writeObject(niu);
                rsp = fromServer.readUTF();
            }
            
            catch(StreamCorruptedException e){
                System.out.println("StreamCorrupted Exception");
            }
            catch(IOException e){
                System.out.println("Otra IOException"+e);
            }
            if (rsp != null){
                JOptionPane.showMessageDialog(null, rsp);
                regDialog.setVisible(false);
            }
            
        }
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void miLogOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogOActionPerformed
        JOptionPane.showMessageDialog(null,"GoodBye..."
                                            , "Successful Logout"
                                            , JOptionPane.INFORMATION_MESSAGE);
           // aquí faltan cosas cojones!!!
            
            currUser = null;
            eMail = null;
            mails = null;
            model.clear();
            mMail.setEnabled(false);
            miNew.setEnabled(true);
            miLogI.setEnabled(true);
            miDelete.setEnabled(false);
            miLogO.setEnabled(false);
            miConfig.setEnabled(true);
            logPanel.setVisible(true);
            appPanel.setVisible(false);
            mailDialog.setVisible(false);
            taMail.setText(null);
            txtSubjMail.setText(null);
            txtSenderMail.setText(null);
            txtRecepMail.setText(null);
            txtUserLog.setText("Insert User to login...");
            txtPassLog.setText(null);
    }//GEN-LAST:event_miLogOActionPerformed

    private void miLogIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogIActionPerformed
        log();
    }//GEN-LAST:event_miLogIActionPerformed

    private void btnNewEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmActionPerformed
        newMail();
    }//GEN-LAST:event_btnNewEmActionPerformed

    private void txtSenderMailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenderMailKeyTyped
        if (!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtSenderMailKeyTyped

    private void txtRecepMailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecepMailKeyTyped
        if (!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtRecepMailKeyTyped

    private void btnAMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAMailActionPerformed
        
        if (btnAMail.getText().equals("SEND")){
            sendMail();
            clearMailData();
            mailDialog.setVisible(false);
        }
        else if (btnAMail.getText().equals("REPLY")){
            String buff = eMail.getSender();
            newMail();
            txtRecepMail.setText(buff);
            txtSubjMail.setText(null);
            taMail.setText(null);
            btnAMail.setText("SEND");
        }        
    }//GEN-LAST:event_btnAMailActionPerformed

    private void miSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSendActionPerformed
        newMail();
    }//GEN-LAST:event_miSendActionPerformed

    private void btnCancelMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelMailActionPerformed
        clearMailData();
        mailDialog.setVisible(false);
    }//GEN-LAST:event_btnCancelMailActionPerformed

    private void mailDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_mailDialogWindowClosing
        clearMailData();
        mailDialog.setVisible(false);
    }//GEN-LAST:event_mailDialogWindowClosing

    private void miRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRefreshActionPerformed
        askMails();
        listViewer();
    }//GEN-LAST:event_miRefreshActionPerformed

    private void btnOpenEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenEmActionPerformed
        
        eMail = selectEMail();
        openMail();
    }//GEN-LAST:event_btnOpenEmActionPerformed

    private void btnDeleteEmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmActionPerformed
       
        eMail = selectEMail();
        deleteMail();
    }//GEN-LAST:event_btnDeleteEmActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        if (clientSocket != null){
            try{
                toServer.writeUTF("BYE");

                toServer.close();
                fromServer.close();
                objToServer.close();
                objFromServer.close();
                clientSocket.close();
            }
            catch(IOException e){
                System.out.println("Error Cerrando ventana cliente " + e);
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtPassLogFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassLogFocusGained
        txtPassLog.setText(null);
    }//GEN-LAST:event_txtPassLogFocusGained

    
    
    
    private void newMail(){
        txtSenderMail.setText(currUser);
        txtSenderMail.setEditable(false);
        txtRecepMail.setEditable(true);
        txtSubjMail.setEditable(true);
        taMail.setEditable(true);
        cbEncryptMail.setEnabled(true);
        btnAMail.setText("SEND");
        mailDialog.setVisible(true);
    }
    
    private void readMail(){
        txtSenderMail.setEditable(false);
        txtRecepMail.setEditable(false);
        txtSubjMail.setEditable(false);
        taMail.setEditable(true);
        cbEncryptMail.setEnabled(false);
        btnAMail.setText("REPLY");
        mailDialog.setVisible(true);
    }
    
    private void clearMailData(){
        txtSenderMail.setText(null);
        txtRecepMail.setText(null);
        txtSubjMail.setText(null);
        taMail.setText(null);
    }
    
    private Mail selectEMail(){
        
        int sel = lMails.getSelectedIndex();
        if(sel > -1){
            System.out.println("sel: " + sel);
            int toOpen = (mails.size() - (1 + sel));
            System.out.println("Abriras: " + toOpen);

            return mails.get(toOpen);
        }
        return null;
    }
    
    private void openMail(){
        
        if (eMail == null){
            return;
        }
        
        readMail();
        txtSenderMail.setText(eMail.getSender());
        txtRecepMail.setText(currUser);
        txtSubjMail.setText(eMail.getSubject());
        
        if(eMail.isEncrypt()){
            
            boolean success = false;
            
            String resp = JOptionPane.showInputDialog(null
                                            ,"The mail is encrypted, insert decrypter password"
                                            , "Encrypted E-Mail"
                                            , JOptionPane.INFORMATION_MESSAGE);
            
            if (resp != null) success = eMail.decrypt(resp);
            
            if(success){
                JOptionPane.showMessageDialog(null
                                            ,"Decryption successful"
                                            , "OK"
                                            , JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null
                                            ,"Wrong password"
                                            , "..."
                                            , JOptionPane.ERROR_MESSAGE);
            }
            
        }
        taMail.setText(eMail.getMailText());
        
        if (eMail.isEncrypt()) cbEncryptMail.setSelected(false);
        else cbEncryptMail.setSelected(false);
    }
    
    private void deleteMail(){
        
        
    }
    
    /**
     * 
     */
    private void log(){
        
        String msg = "Insert User and password...";
        String usLog = null;
        
        if ( txtUserLog.getText().length() > 0 && txtPassLog.getPassword().length > 0){
            
            try{
                toServer.writeUTF("LOGIN");
                usLog = txtUserLog.getText();
                toServer.writeUTF(usLog);
                toServer.writeUTF(String.copyValueOf(txtPassLog.getPassword()));
            
                msg = fromServer.readUTF();
            }
            catch(IOException e){
                System.out.println("Log Client exception " + e );
            }
        }
        if (msg.equals("OK")){

            JOptionPane.showMessageDialog(null,"Welcome..."
                                            , "Successful Login"
                                            , JOptionPane.INFORMATION_MESSAGE);
           //activo funcionalidades de user logueado
            currUser = usLog;
            mMail.setEnabled(true);
            miNew.setEnabled(false);
            miLogI.setEnabled(false);
//            miDelete.setEnabled(true);
            miLogO.setEnabled(true);
            miConfig.setEnabled(false);
            logPanel.setVisible(false);
            appPanel.setVisible(true);
            
            askMails();
            listViewer();
        }
        else {
            JOptionPane.showMessageDialog(null, msg, "Error Login", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    private int askMails(){
        
        model.clear();
        int cant = -1;
        try{
            
            String read;
            
            toServer.writeUTF("MSG");
            
            
            cant = fromServer.readInt();
            mails = new LinkedList<>();
            
            for (int i = 0; i < cant; i++) {
                mails.add((Mail) objFromServer.readObject());
                System.out.println(mails.get(i));
            }

            System.out.printf("%d mails downloaded\n", cant);
        }
        catch(ClassNotFoundException e){
            System.out.println("ClassNotFoundException [client.askMails()] " +e);
        }
        catch(IOException e){
            System.out.println("Otra cacho excepcion [client.askMails()] " +e);
        }
        
        return cant;
    }
    
    private void sendMail(){
        
        if (txtRecepMail.getText().length() > 0 
                && txtSubjMail.getText().length() > 0 
                && taMail.getText().length() > 0){
            
            if(cbEncryptMail.isSelected()) {
                String pass;
                do{
                    pass = JOptionPane.showInputDialog(null, "Insert password to encrypt"
                                                        , "Encrypt pass"
                                                        , JOptionPane.QUESTION_MESSAGE);
                }while(pass.trim().length() < 1);
                
                System.out.printf("%s, %s, %s, %s, %s\n", txtRecepMail.getText(), currUser, taMail.getText(), txtSubjMail.getText(), pass);
                eMail = new Mail(txtRecepMail.getText(), currUser, taMail.getText(), txtSubjMail.getText(), pass);
            }
            else{
                eMail = new Mail(txtRecepMail.getText(), currUser, taMail.getText(), txtSubjMail.getText());
            }
            
            
            try{
                toServer.writeUTF("SEND");
                objToServer.writeObject(eMail);
            }
            catch(IOException e){
                System.out.println("Big Exception [Client.sendEmail()]" + e);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Insert all datas"
                                                        , "Incomplete E-Mail"
                                                        , JOptionPane.ERROR_MESSAGE);
        }
    }
    
        
    /**
     * 
     */
    private void nou(){
        txtUserReg.setText("Insert User (Just Letter or Digit)...");
        txtPassReg.setText(null);
        txtNameReg.setText("Your Name (optional)...");
        regDialog.setVisible(true);
        regDialog.setLocationRelativeTo(null);
        regDialog.requestFocus();
    }
    
    
    
    
    private void listViewer(){
        
        StringBuilder orig = new StringBuilder();
        StringBuilder subj = new StringBuilder();
        StringBuilder m = new StringBuilder();
        
        if (mails != null && !mails.isEmpty()) {
            
            for (int i = (mails.size() - 1); i >= 0; i--) {
                
                orig.delete(0, orig.length());
                subj.delete(0, subj.length());
                m.delete(0, m.length());
                
                orig.append(mails.get(i).getSender());
                subj.append(mails.get(i).getSubject()); 
                
                if(orig.length() > 20) orig.setLength(20);
                if(subj.length() > 60) subj.setLength(60);
                
                m.append(orig);
                m.append("   |   ");
                m.append(subj);
//                m.append("   -   ");
//                m.append(mails.get(i).getCreation().toString());
               model.addElement(m.toString());
            }
            
        }
    }
    
    
    
    
    
                                                                                                        //Main
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientApp().setVisible(true);
        });
    }
    
    
    private String localhost;
    private int port;
    private Socket clientSocket;
    private DataInputStream fromServer;
    private DataOutputStream toServer;
    private ObjectInputStream objFromServer;
    private ObjectOutputStream objToServer;
    private String currUser;
    private LinkedList<Mail> mails;
    private Mail eMail;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel appPanel;
    private javax.swing.JButton btnAMail;
    private javax.swing.JButton btnAccepConnect;
    private javax.swing.JButton btnCanConect;
    private javax.swing.JButton btnCancelDecryp;
    private javax.swing.JButton btnCancelMail;
    private javax.swing.JButton btnCancelNew;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnDeleteEm;
    private javax.swing.JButton btnLog;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewEm;
    private javax.swing.JButton btnOpenEm;
    private javax.swing.JCheckBox cbEncryptMail;
    private javax.swing.JDialog decryptDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JList<String> lMails;
    private DefaultListModel model;
    private javax.swing.JPanel logPanel;
    private javax.swing.JMenu mAccount;
    private javax.swing.JMenu mMail;
    private javax.swing.JMenu mServer;
    private javax.swing.JDialog mailDialog;
    private javax.swing.JMenuItem miConfig;
    private javax.swing.JMenuItem miDelMails;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miLogI;
    private javax.swing.JMenuItem miLogO;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miRefresh;
    private javax.swing.JMenuItem miSend;
    private javax.swing.JDialog regDialog;
    private javax.swing.JDialog serverDialog;
    private javax.swing.JTextArea taMail;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtNameReg;
    private javax.swing.JPasswordField txtPassLog;
    private javax.swing.JPasswordField txtPassReg;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtRecepMail;
    private javax.swing.JTextField txtSenderMail;
    private javax.swing.JTextField txtSubjMail;
    private javax.swing.JTextField txtUserLog;
    private javax.swing.JTextField txtUserReg;
    // End of variables declaration//GEN-END:variables
}
